setwd("~/Desktop/MasterDataScience/11_R_Graficos/visualizacion/data")
obesidad = read.csv('~/Desktop/MasterDataScience/11_R_Graficos/visualizacion/data/obesidad.csv')
head(obesidad)
ggplot(obesidad) + aes(x=renta,y=imc) + geom_point() + geom_smooth(method='lm')
ggplot(obesidad) + aes(x=renta,y=imc,col=region) + geom_point() + geom_smooth(method='lm')
require(tidyverse)
ggplot(obesidad) + aes(x=renta,y=imc,col=region) + geom_point() + geom_smooth(method='lm')
ggplot(obesidad) + aes(x=renta,y=imc) + geom_point(size=0.1) + geom_smooth(method='lm')
p = ggplot(obesidad) + aes(x=renta,y=imc) + geom_point(size=0.1) + geom_smooth(method='lm')
p +scale_x_log10()
p +scale_x_log10()+scale_y_log10()
p +scale_x_log10()+scale_y_log10(breaks=seq(10,50,10),tans='log')
p +scale_x_log10()+scale_y_log10(breaks=seq(10,50,10),trans='log')
p +scale_x_log10()+scale_y_continuous(breaks=seq(10,50,10),trans='log')
ggplot(obesidad,aes(x=renta,y=imc,color=region))+geom_smooth(method="lm") +
geom_point(size=.1,alpha=.1)+
scale_x_log10()+scale_y_continuous(breaks=seq(10,50,10),trans="log")+
scale_color_manual("Continente",values=c("green4","red4"),limits=c("Europa","Asia"))
p = ggplot(obesidad,aes(x=renta,y=imc,color=region))+geom_smooth(method="lm") +
geom_point(size=.1,alpha=.1)+
scale_x_log10()+scale_y_continuous(breaks=seq(10,50,10),trans="log")+
scale_color_manual("Continente",values=c("green4","red4"),limits=c("Europa","Asia"))
p + facet_grid(~region) + theme_bw()
p + facet_grid(~region) + theme_classic()
p + facet_grid(~region) + theme_dark()
p + facet_grid(~region) + theme_update()
p + facet_grid(~region) + theme_update() + ggsave("obesidad.pdf")
p + facet_grid(~region) + theme_update()
ggsave(obesidad.pdf)
ggplot(obesidad,aes(x=renta,y=imc,color=region))+geom_smooth(method="lm")
ggsave("obesidad.pdf") #exportación de la imagen en formato pdf
ggsave("obesidad.png") #exportación de la imagen en formato Portable Network Graphics (PNG
ggplot(obesidad,aes(x=renta,y=imc,color=region))+geom_smooth(method="lm")
ggsave(obesidad.pdf) #exportación de la imagen en formato pdf
ggsave("obesidad.png") #exportación de la imagen en formato Portable Network Graphics (PNG
ggplot(obesidad,aes(x=renta,y=imc,color=region))+geom_smooth(method="lm")
ggsave("obesidad.pdf") #exportación de la imagen en formato pdf
ggsave("obesidad.png") #exportación de la imagen en formato Portable Network Graphics (PNG
ggplot(obesidad,aes(x=renta,y=imc,color=region))+geom_smooth(method="lm")
ggsave("obesidad.pdf") #exportación de la imagen en formato pdf
ggsave("obesidad.png") #exportación de la imagen en formato Portable Network Graphics (PNG
ggplot(obesidad)+aes(x=renta,y=imc,color=region)+geom_smooth(method="lm")
ggsave("obesidad.pdf") #exportación de la imagen en formato pdf
ggsave("obesidad.png")
ggplot(obesidad)+aes(x=renta,y=imc,color=region)+geom_smooth(method="lm")
ggsave("obesidad.pdf")
ggplot(obesidad,aes(x=renta,y=imc,color=region))+geom_smooth(method="lm")
ggsave("obesidad.pdf")
library(ggmap)
require(ggmap)
library(devtools)
install.packages("devtools")
library(devtools)
library('devtools')
library(ggmap)
install.packages(ggmap)
install.packages('ggmap')
library(ggmap)
library(ggmap)
install_github("rOpenSpain/caRtociudad")
library(devtools)
setwd("~/Desktop/MasterDataScience/11_R_Graficos")
library(devtools)
setwd("~/")
library(devtools)
install.packages('caRtociudad')
install_github("rOpenSpain/caRtociudad")
kschool<-c(lat= 40.45137,lon=-3.693827)
mapa_bw <- get_stamenmap(kschool_box,zoom = 16,maptype="toner-lite")
setwd("~/Desktop/MasterDataScience/11_R_Graficos/visualizacion/data")
gasolineras= read_csv2('~/Desktop/MasterDataScience/11_R_Graficos/visualizacion/data/carburantes.csv')
head(gasolineras)
Titanic
titanic<-apply(Titanic,c(1,4),sum)
titanic
library(knitr)
kable(titanic,caption="Supervivencia a la catastrofe del Titanic según la clase
")"
library(knitr)
kable(titanic,caption="Supervivencia a la catastrofe del Titanic según la clase")
install.packages('DT')
gapminder
Gapminder
require(gapminder)
gapminder
install.packages("DT")
install.packages("DT",dep=TRUE)
install.packages("DT",source=TRUE)
