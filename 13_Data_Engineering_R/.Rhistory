return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
})
}
assert_that(k>=0)
fibonacci <- function(k){
tryCatch({
assert_that(k>=0)
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}},error = 'hello')
}
fibonacci(-4)
fibonacci(1)
fibonacci(1)
fibonacci(-2)
myfun <- function(x){
tryCatch({
#code to execute
#it can include checks
assert_that(x > 3)
# ...
return (x)
},
error = function(e){
return (-1)
},
finally = {
# clean up code
})
}
myfun(2)
#it can include checks
assert_that(k >= 0)
fibonacci <- function(k){
tryCatch({
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
#it can include checks
assert_that(k >= 0)
# ...
return (x)
},
error = function(e){
return (-1)
},
finally = {
# clean up code
})
}
fibonacci(-5)
#it can include checks
assert_that(k >= 0, msg='hola')
# ...
return (x)
fibonacci <- function(k){
tryCatch({
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
#it can include checks
assert_that(k >= 0, msg='hola')
# ...
return (x)
},
error = function(e){
return (-1)
},
finally = {
# clean up code
})
}
fibonacci(-5)
fibonacci <- function(k){
tryCatch({
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
#it can include checks
assert_that(k >= 0, msg='hola')
# ...
return (x)
},
error = function(e){
return ('hello')
},
finally = {
# clean up code
})
}
fibonacci(-5)
fibonacci <- function(k){
tryCatch({
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
#it can include checks
assert_that(k >= 0)
# ...
return (x)
},
error = function(e){
return ('hello')
},
finally = {
print('Hello World')
})
}
fibonacci(-5)
fibonacci <- function(k){
tryCatch({
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
#it can include checks
assert_that(k >= 0)
# ...
return (x)
},
error = function(e){
return ('error')
},
finally = {
print('End of Code')
})
}
fibonacci(-5)
fibonacci <- function(k){
tryCatch({
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
#it can include checks
assert_that(k >= 0)
# ...
return (x)
},
error = function(e){
return (e)
},
finally = {
print('End of Code')
})
}
fibonacci(-5)
fibonacci <- function(k){
tryCatch({
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
#it can include checks
assert_that(k >= 0,msg='Error de assert')
# ...
return (x)
},
error = function(e){
return (e)
},
finally = {
print('End of Code')
})
}
fibonacci(-5)
test_file('tests/test.math_functions.R')
setwd("~/Repos/MasterDataScience/13_Data_Engineering_R")
test_file('tests/test.math_functions.R')
test_that("fib(1)", fibonacci(1) == 1)
test_that("fib(1)", expect_true(fibonacci(1) == 1))
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
View(fibonacci)
View(myfun)
function(x){
tryCatch({
#code to execute
#it can include checks
assert_that(x > 3)
# ...
return (x)
},
error = function(e){
return (-1)
},
finally = {
# clean up code
})
}
test_file('tests/test.math_functions.R')
test_that("test1", expect_true(fibonacci(1) == 1))
fibonacci <- function(k){
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
test_that("test1", expect_true(fibonacci(1) == 1))
test_that("test1", expect_true(fibonacci(1) == 1))
test_file('tests/test.math_functions.R')
assert_that(k>=0)
fibonacci <- function(k){
assert_that(k>= 0)
if (k <= 1) {
return (1)
}else{
return (fibonacci(k-1) + fibonacci(k-2))
}
}
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_that("test1", expect_true(fibonacci(1) == 1))
test_that("test1", expect_true(fibonacci(1) == 1))
test_that("test1", expect_false(fibonacci(1) == 1))
test_file('tests/test.math_functions.R')
test_that("test1", expect_true(fibonacci(1) == 1))
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_that("test1", expect_true(fibonacci(1) == 1))
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
test_file('tests/test.math_functions.R')
library(logging)
logging::loglevels
basicConfig()
ls(getLogger())
getLogger()[['handlers']]
getLogger()[['level']]
logerror('Writing error log')
logwarn('Writing warning log')
loginfo('Writing info log')
logdebug('Writing debug log')
logReset()
basicConfig(level='FINEST')
addHandler(writeToFile, file="testing.log", level='DEBUG')
getLogger()[['handlers']]
loginfo('test %d', 1)
logdebug('test %d', 2)
logwarn('test %d', 3)
logfinest('test %d', 4)
library('rvest')
url <- 'https://www.filmaffinity.com/es/topgen.php'
webpage <- read_html(url)
webpage
url <- 'http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc='
webpage <- read_html(url)
webpage
html_table('incidencias')
library(rvest)
webpage <- read_html("http://www.bls.gov/web/empsit/cesbmart.htm")
tbls <- html_nodes(webpage, "table")
head(tbls)
library(rvest)
webpage <- read_html("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc=")
tbls <- html_nodes(webpage, "table")
head(tbls)
library(XML)
url <- "http://www.bls.gov/web/empsit/cesbmart.htm"
# read in HTML data
tbls_xml <- readHTMLTable(url)
typeof(tbls_xml)
length(tbls_xml)
library(XML)
install.packages("XML")
library(XML)
url <- "http://www.bls.gov/web/empsit/cesbmart.htm"
# read in HTML data
tbls_xml <- readHTMLTable(url)
typeof(tbls_xml)
length(tbls_xml)
url <- "http://www.bls.gov/web/empsit/cesbmart.html"
# read in HTML data
tbls_xml <- readHTMLTable(url)
typeof(tbls_xml)
library(XML)
url <- "http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc="
# read in HTML data
tbls_xml <- readHTMLTable(url)
typeof(tbls_xml)
length(tbls_xml)
## [1] 15
head(tbls_xml[[3]])
## [1] 15
head(tbls_xml[[1]])
## [1] 15
head(tbls_xml[[2]])
library(rvest)
webpage <- read_html("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc=")
tbls <- html_nodes(webpage, "table.incidencias")
head(tbls)
html_table(tbls)
library(rvest)
webpage <- read_html("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc=")
tbls <- html_nodes(webpage, "table.incidencias")
html_table(tbls)
head(tbls)
class(tbls)
tabla = html_table(tbls)
library(rvest)
webpage <- read_html("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc=")
tbls <- html_nodes(webpage, "table.incidencias")
tabla = html_table(tbls)
head(tbls)
class(tbls)
tabla
class(tabla)
tabla[1]
tabla[0]
tabla[2]
library(XML)
url <- "http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc="
# read in HTML data
tbls_xml <- readHTMLTable(url)
typeof(tbls_xml)
length(tbls_xml)
head(tbls_xml[[1]])
tbls_xml
library(XML)
url <- "http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc="
# read in HTML data
tbls_xml <- readHTMLTable(url)
typeof(tbls_xml)
length(tbls_xml)
head(tbls_xml[[1]])
tbls_xml
class(tbls_xml)
library('plyr')
df = ldply(tabla,data.frame)
df
library('plyr')
library(rvest)
webpage <- read_html("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc=")
tbls <- html_nodes(webpage, "table.incidencias")
tabla = html_table(tbls)
head(tbls)
class(tbls)
class(tabla)
tabla[2]
library(rvest)
webpage <- read_html("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc=")
tbls <- html_nodes(webpage, "table.incidencias")
tabla = html_table(tbls)
head(tbls)
class(tbls)
class(tabla)
tabla[2]
tabla
library('plyr')
df = ldply(tabla,data.frame)
df
df$X1
class(df)
names(df) <- c("X1", "Fecha")
df
names(df) <- c("Fecha", "Incidente")
df
df[-c(1), ]
df1 = df
df2 = df
DFtranspose <- cbind(t(df1[2, ]), t(df2))
rownames(DFtranspose) <- df1[1, ]
DFtranspose
df1
new <- rbind(df1, df2)
new
library(rvest)
webpage <- read_html("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=4913&d_fecha=2000-11-01&h_fecha=2018-11-14&desc=")
tbls <- html_nodes(webpage, "table.incidencias")
tabla = html_table(tbls)
head(tbls)
class(tbls)
class(tabla)
tabla
library('plyr')
df = ldply(tabla,data.frame)
class(df)
names(df) <- c("Fecha", "Incidente")
df =df[-c(1), ]
df1 = df
df1
df2 = df
new <- rbind(df1, df2)
new
library(magrittr)
library('rvest')
library ('plyr')
dataframefinal <- data.frame()
url ="http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=1&numReg=486&d_fecha=2017-11-01&h_fecha=2018-11-14&desc="
listainicial <- url %>% read_html() %>% html_nodes("table.incidencias") %>% html_table()
dataframefinal <- ldply (listainicial, data.frame)
names(dataframefinal) <- c("Fecha", "Incidente")
dataframefinal <- dataframefinal[-c(1), ]
for (i in 2:25) {
url =paste("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=", i ,"&numReg=486&d_fecha=2017-11-01&h_fecha=2018-11-14&desc=", sep="")
tmp <- url %>% read_html() %>% html_nodes("table.incidencias") %>% html_table()
tmpdf <- ldply (tmp, data.frame)
names(tmpdf) <- c("Fecha", "Incidente")
tmpdf <- tmpdf[-c(1), ]
dataframefinal <- rbind(dataframefinal, tmpdf)
}
dataframefinal
library(magrittr)
library('rvest')
library ('plyr')
dataframefinal <- data.frame()
for (i in 1:25) {
url =paste("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=", i ,"&numReg=486&d_fecha=2017-11-01&h_fecha=2018-11-14&desc=", sep="")
tmp <- url %>% read_html() %>% html_nodes("table.incidencias") %>% html_table()
tmpdf <- ldply (tmp, data.frame)
names(tmpdf) <- c("Fecha", "Incidente")
tmpdf <- tmpdf[-c(1), ]
dataframefinal <- rbind(dataframefinal, tmpdf)
}
dataframefinal
rownames(dataframefinal) <- NULL
write.csv(dataframefinal,file='Incidencias.csv')
library(magrittr)
library('rvest')
library ('plyr')
dataframefinal <- data.frame()
for (i in 1:25) {
url =paste("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=", i ,"&numReg=486&d_fecha=2017-11-01&h_fecha=2018-11-14&desc=", sep="")
tmp <- url %>% read_html() %>% html_nodes("table.incidencias") %>% html_table()
tmpdf <- ldply (tmp, data.frame)
names(tmpdf) <- c("Fecha", "Incidente")
tmpdf <- tmpdf[-c(1), ]
dataframefinal <- rbind(dataframefinal, tmpdf)
}
dataframefinal
rownames(dataframefinal) = seq(length=nrow(dataframefinal))
write.csv(dataframefinal,file='Incidencias.csv')
separate(dataframefinal, incidencias, into, sep = "."
separate(dataframefinal, incidencias, into, sep = ".")
separate(dataframefinal, incidencias,sep = ".")
install.packages("tidyr")
data1$c <- gsub('.', '_', dataframefinal$Incidente)
data1
data <- gsub('.', '_', dataframefinal$Incidente)
data
library(magrittr)
library('rvest')
library ('plyr')
dataframefinal <- data.frame()
for (i in 1:25) {
url =paste("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=", i ,"&numReg=486&d_fecha=2017-11-01&h_fecha=2018-11-14&desc=", sep="")
tmp <- url %>% read_html() %>% html_nodes("table.incidencias") %>% html_table()
tmpdf <- ldply (tmp, data.frame)
names(tmpdf) <- c("Fecha", "Incidente")
tmpdf <- tmpdf[-c(1), ]
dataframefinal <- rbind(dataframefinal, tmpdf)
}
dataframefinal
rownames(dataframefinal) = seq(length=nrow(dataframefinal))
gsub('.', '_', dataframefinal$Incidente)
library(magrittr)
library('rvest')
library ('plyr')
dataframefinal <- data.frame()
for (i in 1:25) {
url =paste("http://pagina.jccm.es/justicia/112/ultima_hora/busqueda.php?pagina=", i ,"&numReg=486&d_fecha=2017-11-01&h_fecha=2018-11-14&desc=", sep="")
tmp <- url %>% read_html() %>% html_nodes("table.incidencias") %>% html_table()
tmpdf <- ldply (tmp, data.frame)
names(tmpdf) <- c("Fecha", "Incidente")
tmpdf <- tmpdf[-c(1), ]
dataframefinal <- rbind(dataframefinal, tmpdf)
}
dataframefinal
rownames(dataframefinal) = seq(length=nrow(dataframefinal))
